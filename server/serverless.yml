service: darts
 
frameworkVersion: '2'
 
plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-s3-sync
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: eu-north-1
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'DynamoDB:*'
      Resource: "*"
 
custom:
  esbuild:
    target: es2019
    tsconfig: ./tsconfig.json
    minify: true
 
  httpApi:
    payload: '1.0'

  s3Sync:
    - bucketName: ${env:WEBSITE_BUCKET_NAME}
      localDir: ../clients/dart-client/dist
 
functions:
  getGame:
    handler: src/getGame.handler
    events:
      - httpApi:
          path: /getGame
          method: get
  getGameData:
    handler: src/getGameData.handler
    events:
      - httpApi:
          path: /getGameData
          method: get
  createGame:
    handler: src/createGame.handler
    events:
      - httpApi:
          path: /createGame
          method: post
  insertThrow:
    handler: src/insertThrow.handler
    events:
      - httpApi:
          path: /insertThrow
          method: post
  undoThrow:
    handler: src/undoThrow.handler
    events:
      - httpApi:
          path: /undoThrow
          method: post
  getLatestGame:
    handler: src/getLatestGame.handler
    events:
      - httpApi:
          path: /getLatestGame
          method: get
  connect:
    handler: src/websocket/socket.socket
    events:
        - websocket:
            route: $connect
  disconnect:
    handler: src/websocket/socket.socket
    events:
      - websocket:
          route: $disconnect
  default:
    handler: src/websocket/socket.socket
    events:
      - websocket: $default

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${env:WEBSITE_BUCKET_NAME}
        WebsiteConfiguration:
          IndexDocument: index.html
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: mainTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: gs1pk
            AttributeType: S
          - AttributeName: gs1sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gs1
            KeySchema:
            - AttributeName: gs1pk
              KeyType: HASH
            - AttributeName: gs1sk
              KeyType: RANGE            
            Projection:
                ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]